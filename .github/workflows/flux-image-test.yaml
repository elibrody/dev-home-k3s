name: "Flux Image Test"

on:
  pull_request:
    branches: ["main"]
    paths: ["kubernetes/**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  extract-images:
    name: Extract Images
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.filter-images.outputs.images }}
    steps:
      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Workflow Tools
        run: brew install jo yq

      - name: Checkout Pull Request Branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_PAT }}
          path: pull

      - name: Gather Images in Pull Request Branch
        uses: docker://ghcr.io/allenporter/flux-local:v4.3.1
        with:
          args: >-
            get cluster
            --path /github/workspace/pull/kubernetes/flux
            --enable-images
            --output yaml
            --output-file pull.yaml

      - name: Filter Pull Request Branch Results
        id: filter-images
        run: |
          images=$(yq e '[.. | .images? | select(. != null)] | flatten | sort | unique | .[]' pull.yaml | jo -a)
          echo "::set-output name=images::$images"

  test-images:
    if: ${{ needs.extract-images.outputs.images != '[]' }}
    name: Test images
    runs-on: ubuntu-latest
    needs: extract-images
    strategy:
      matrix:
        images: ${{ fromJSON(needs.extract-images.outputs.images) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Test Images
        run: docker pull ${{ matrix.images }}

  test-images-success:
    if: ${{ always() }}
    needs: ["test-images"]
    name: Test Images Successful
    runs-on: ubuntu-latest
    steps:
      - if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        name: Check matrix status
        run: exit 1
